<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Entra√Æneur Personnalis√© - D√©fenseur de Hockey</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>

    <header>
        <h1>Ton Entra√Æneur Personnel de Hockey</h1>
        <p>Sp√©cialis√© pour les d√©fenseurs</p>
    </header>

    <main id="trainer-container">

        <!-- NIVEAU 1 -->
        <section id="level-1" class="level">
            <h2>Niveau 1 : Les Fondamentaux du D√©fenseur</h2>

            <div class="skill-category">
                <h3><i class="fas fa-map-marker-alt"></i> Positionnement</h3>
                <div class="exercise" data-skill="positioning-1">
                    <input type="checkbox" id="pos1-1" onchange="updateProgress()">
                    <label for="pos1-1"><strong>Prot√©ger la "maison" :</strong> En zone d√©fensive, ta priorit√© est de prot√©ger l'enclave (la zone devant ton filet). [7] Apprends √† toujours garder ton corps entre l'adversaire et le but. Patrouille la zone, la t√™te haute, pour anticiper les passes dangereuses.</label>
                </div>
                 <div class="exercise" data-skill="positioning-1">
                    <input type="checkbox" id="pos1-2" onchange="updateProgress()">
                    <label for="pos1-2"><strong>Contr√¥le de l'√©cart (Gap Control) :</strong> Maintiens une distance d'environ une longueur de b√¢ton avec l'attaquant. [3] Cela te permet de le harceler sans te faire d√©border facilement.</label>
                </div>
            </div>

            <div class="skill-category">
                <h3><i class="fas fa-bullseye"></i> Tirs</h3>
                <div class="exercise" data-skill="shooting-1">
                    <input type="checkbox" id="shoot1-1" onchange="updateProgress()">
                    <label for="shoot1-1"><strong>Le tir des poignets :</strong> Entra√Æne-toi √† d√©cocher un tir des poignets rapide et pr√©cis depuis la ligne bleue. La cl√© est un bon transfert de poids de ta jambe arri√®re vers ta jambe avant. [16]</label>
                </div>
            </div>

            <div class="skill-category">
                <h3><i class="fas fa-cogs"></i> Technique</h3>
                 <div class="exercise" data-skill="technique-1">
                    <input type="checkbox" id="tech1-1" onchange="updateProgress()">
                    <label for="tech1-1"><strong>Patinage arri√®re et pivots :</strong> La fluidit√© de ton patinage est cruciale. Pratique les d√©parts rapides en arri√®re et les pivots pour passer de la marche avant √† la marche arri√®re sans perdre de vitesse. [9]</label>
                </div>
            </div>

             <div class="skill-category">
                <h3><i class="fas fa-brain"></i> Intelligence de jeu</h3>
                <div class="exercise" data-skill="gameiq-1">
                    <input type="checkbox" id="gi1-1" onchange="updateProgress()">
                    <label for="gi1-1"><strong>Communication :</strong> Parle constamment avec ton partenaire de d√©fense et ton gardien. Annonce la pression ("temps!", "dans ton dos!") et les options de passe. Une bonne communication √©vite les erreurs.</label>
                </div>
            </div>

            <button class="quiz-btn" id="quiz1-btn" onclick="startQuiz(1)" disabled>Quiz du Niveau 1</button>
        </section>

        <!-- NIVEAU 2 -->
        <section id="level-2" class="level locked">
            <h2>Niveau 2 : Ma√Ætrise Tactique</h2>
             <!-- Contenu du niveau 2 sera d√©bloqu√© par le JavaScript -->
        </section>

        <!-- NIVEAU 3 -->
        <section id="level-3" class="level locked">
             <h2>Niveau 3 : Le D√©fenseur d'√âlite</h2>
             <!-- Contenu du niveau 3 sera d√©bloqu√© par le JavaScript -->
        </section>

    </main>

    <div id="quiz-modal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeQuiz()">√ó</span>
            <h2 id="quiz-title">Quiz</h2>
            <div id="quiz-question"></div>
            <div id="quiz-options"></div>
            <button id="quiz-submit-btn" onclick="submitQuiz()">Valider</button>
            <div id="quiz-feedback"></div>
        </div>
    </div>
    
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script src="script.js"></script>
</body>
</html>
Use code with caution.
Html
style.css
Generated css
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

body {
    font-family: 'Roboto', sans-serif;
    background-color: #f0f4f8;
    color: #333;
    line-height: 1.6;
    margin: 0;
    padding: 20px;
}

header {
    background-color: #00205b;
    color: #fff;
    padding: 20px;
    text-align: center;
    border-radius: 8px;
    margin-bottom: 30px;
}

header h1 {
    margin: 0;
    font-size: 2.5em;
}

.level {
    background: #fff;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    transition: opacity 0.5s;
}

.level.locked {
    opacity: 0.5;
    pointer-events: none;
}

.level.locked::after {
    content: 'üîí Verrouill√©';
    font-size: 1.5em;
    color: #a0a0a0;
    display: block;
    text-align: center;
    margin-top: 20px;
}


.skill-category {
    margin-bottom: 25px;
}

.skill-category h3 {
    color: #00205b;
    border-bottom: 2px solid #e0e0e0;
    padding-bottom: 5px;
    margin-bottom: 15px;
}

.exercise {
    display: flex;
    align-items: flex-start;
    margin-bottom: 10px;
}

.exercise input[type="checkbox"] {
    margin-right: 15px;
    margin-top: 5px;
    min-width: 18px;
    min-height: 18px;
}

.quiz-btn {
    display: block;
    width: 100%;
    padding: 15px;
    font-size: 1.2em;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.quiz-btn:disabled {
    background-color: #a0a0a0;
    cursor: not-allowed;
}

.quiz-btn:not(:disabled):hover {
    background-color: #218838;
}

/* Modal Quiz */
.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.6);
}

.modal-content {
    background-color: #fefefe;
    margin: 10% auto;
    padding: 30px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
    border-radius: 10px;
    text-align: center;
}

.close-btn {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

#quiz-options button {
    display: block;
    width: 100%;
    padding: 12px;
    margin: 5px 0;
    border: 1px solid #ccc;
    border-radius: 5px;
    background: #f9f9f9;
    cursor: pointer;
}

#quiz-options button.selected {
    background-color: #007bff;
    color: white;
    border-color: #0056b3;
}


#quiz-feedback {
    margin-top: 20px;
    font-size: 1.1em;
    font-weight: bold;
}
Use code with caution.
Css
script.js
Generated javascript
document.addEventListener('DOMContentLoaded', function() {
    loadProgress();
});

const quizzes = {
    1: {
        title: "Quiz du Niveau 1",
        questions: [
            {
                question: "Quelle est la priorit√© absolue d'un d√©fenseur dans sa propre zone ?",
                options: ["Faire une longue passe pour l'attaque", "Prot√©ger la 'maison' (l'enclave)", "Mettre en √©chec le porteur de la rondelle n'importe o√π"],
                answer: "Prot√©ger la 'maison' (l'enclave)"
            },
            {
                question: "Quelle est la distance id√©ale √† maintenir avec un attaquant (Gap Control) ?",
                options: ["Le plus pr√®s possible", "√Ä deux longueurs de b√¢ton", "Environ une longueur de b√¢ton"],
                answer: "Environ une longueur de b√¢ton"
            }
        ]
    },
    2: {
        title: "Quiz du Niveau 2",
        questions: [
            {
                question: "Quand un d√©fenseur devrait-il 'pincer' (pinch) √† la ligne bleue offensive ?",
                options: ["√Ä chaque fois que la rondelle est pr√®s des bandes", "Seulement s'il est certain de r√©cup√©rer la rondelle", "Jamais, c'est trop risqu√©"],
                answer: "Seulement s'il est certain de r√©cup√©rer la rondelle"
            }
        ]
    }
};

let currentQuizNum = 0;
let selectedOption = null;

function updateProgress() {
    const levels = [1, 2, 3];
    levels.forEach(levelNum => {
        const exercises = document.querySelectorAll(`#level-${levelNum} .exercise input`);
        if (exercises.length > 0) {
            const allDone = Array.from(exercises).every(cb => cb.checked);
            const quizBtn = document.getElementById(`quiz${levelNum}-btn`);
            if (quizBtn) {
                quizBtn.disabled = !allDone;
            }
        }
    });
    saveProgress();
}

function startQuiz(levelNum) {
    currentQuizNum = levelNum;
    const quiz = quizzes[levelNum];
    document.getElementById('quiz-title').innerText = quiz.title;
    
    const modal = document.getElementById('quiz-modal');
    displayQuestion(0);
    modal.style.display = "block";
}

function displayQuestion(questionIndex) {
    const quiz = quizzes[currentQuizNum];
    const question = quiz.questions[questionIndex];
    
    document.getElementById('quiz-question').innerText = question.question;
    const optionsContainer = document.getElementById('quiz-options');
    optionsContainer.innerHTML = '';
    selectedOption = null;

    question.options.forEach(option => {
        const button = document.createElement('button');
        button.innerText = option;
        button.onclick = () => {
            if(selectedOption) {
                selectedOption.classList.remove('selected');
            }
            selectedOption = button;
            selectedOption.classList.add('selected');
        };
        optionsContainer.appendChild(button);
    });
    
    document.getElementById('quiz-feedback').innerText = '';
    document.getElementById('quiz-submit-btn').style.display = 'block';

}


function submitQuiz() {
    if (!selectedOption) {
        alert("Choisis une r√©ponse !");
        return;
    }

    const quiz = quizzes[currentQuizNum];
    // Pour ce cas simple, on ne g√®re qu'une question √† la fois.
    const currentQuestion = quiz.questions[0]; 
    const feedback = document.getElementById('quiz-feedback');

    if (selectedOption.innerText === currentQuestion.answer) {
        feedback.innerText = "Bonne r√©ponse ! Niveau d√©bloqu√© !";
        feedback.style.color = 'green';
        unlockNextLevel(currentQuizNum);
        setTimeout(closeQuiz, 2000);
    } else {
        feedback.innerText = "Mauvaise r√©ponse. Revois tes classiques et r√©essaie !";
        feedback.style.color = 'red';
    }
     document.getElementById('quiz-submit-btn').style.display = 'none';
}


function closeQuiz() {
    document.getElementById('quiz-modal').style.display = "none";
}

function unlockNextLevel(levelNum) {
    const nextLevelNum = levelNum + 1;
    const nextLevel = document.getElementById(`level-${nextLevelNum}`);
    if (nextLevel) {
        nextLevel.classList.remove('locked');
        nextLevel.innerHTML += getLevelContent(nextLevelNum); // Ajoute le contenu du niveau
        updateProgress();
    }
    localStorage.setItem(`level-${nextLevelNum}-unlocked`, 'true');
}

function getLevelContent(levelNum) {
    if (levelNum === 2) {
        return `
            <div class="skill-category">
                <h3><i class="fas fa-map-marker-alt"></i> Positionnement</h3>
                <div class="exercise" data-skill="positioning-2">
                    <input type="checkbox" id="pos2-1" onchange="updateProgress()">
                    <label for="pos2-1"><strong>Jeu √† la ligne bleue offensive :</strong> Apprends quand 'pincer' pour garder la rondelle en zone offensive et quand reculer pour √©viter un 2 contre 1. [1] C'est une question de lecture de jeu.</label>
                </div>
            </div>
             <div class="skill-category">
                <h3><i class="fas fa-bullseye"></i> Tirs</h3>
                <div class="exercise" data-skill="shooting-2">
                    <input type="checkbox" id="shoot2-1" onchange="updateProgress()">
                    <label for="shoot2-1"><strong>Tirs bas pour d√©viations :</strong> Au lieu de toujours viser la lucarne, entra√Æne-toi √† tirer bas et fort en direction du but pour que tes attaquants puissent d√©vier la rondelle.</label>
                </div>
            </div>
            <button class="quiz-btn" id="quiz2-btn" onclick="startQuiz(2)" disabled>Quiz du Niveau 2</button>
        `;
    }
     if (levelNum === 3) {
        return `
            <div class="skill-category">
                <h3><i class="fas fa-map-marker-alt"></i> Intelligence de Jeu</h3>
                <div class="exercise" data-skill="gameiq-3">
                    <input type="checkbox" id="gi3-1" onchange="updateProgress()">
                    <label for="gi3-1"><strong>Lecture de la mont√©e (Rush Reading) :</strong> Analyse rapidement la situation (2 contre 1, 3 contre 2) et communique avec ton partenaire pour savoir qui prend le porteur de la rondelle et qui couvre la passe. [20]</label>
                </div>
            </div>
        `;
    }
    return '';
}

// Sauvegarde et chargement de la progression
function saveProgress() {
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    checkboxes.forEach(cb => {
        localStorage.setItem(cb.id, cb.checked);
    });
}

function loadProgress() {
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    checkboxes.forEach(cb => {
        const isChecked = localStorage.getItem(cb.id) === 'true';
        cb.checked = isChecked;
    });

    if (localStorage.getItem('level-2-unlocked') === 'true') {
        const level2 = document.getElementById('level-2');
        level2.classList.remove('locked');
        level2.innerHTML = `<h2>Niveau 2 : Ma√Ætrise Tactique</h2>` + getLevelContent(2);
    }
    if (localStorage.getItem('level-3-unlocked') === 'true') {
         const level3 = document.getElementById('level-3');
        level3.classList.remove('locked');
        level3.innerHTML = `<h2>Niveau 3 : Le D√©fenseur d'√âlite</h2>` + getLevelContent(3);
    }
    
    // Re-check checkboxes after loading dynamic content
     const allCheckboxes = document.querySelectorAll('input[type="checkbox"]');
    allCheckboxes.forEach(cb => {
        const isChecked = localStorage.getItem(cb.id) === 'true';
        cb.checked = isChecked;
    });

    updateProgress();
}
